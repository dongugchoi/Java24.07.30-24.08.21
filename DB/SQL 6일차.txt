FROM절 : IN LINE VIEW : 테이블처럼사용
SELECT절 : SCALAR : 컬럼처럼사용
WHERE절 : SUB QUERY : 값,표현식처럼사용

INNER 조인
각 테이블에서 조인 조건에 일치되는 데이터만 반환

1-1. SELF INNER JOIN
하나의 테이블에서 서로 다른 컬럼을 참조하는 것

1-2. CROSS INNER JOIN
모든 가능한 조합을 만들어 반환하는 JOIN 방법
이를 통해 두 개 이상의 테이블을 조합하여 새로운 테이블을 생성할 수 있다.

OUTER JOIN

2. LEFT OUTER JOIN

3. RIGHT OUTER JOIN

4. FULL OUTER JOIN

VIEW
가상의 테이블
복잡한 쿼리문의결과를 내부에 가진다.
보이지 않고 싶은 컬럼은 빼도 된다.
테이블 뿐만 아니라 다른 뷰를 참조해서
새로운 뷰를 만들 수 있다.

CREAT OR REPLACE VIEW 뷰이름 AS(

);

CASE문
CASE WHEN THEN ELSE END 어떠한 조건에 맞춰 값을 출력해주는 문법
CASE WHEN 조건식 THEN '참 값' ELSE '거짓 값' END

PL/SQL
-오라클에서 지원하는 프로그래밍 언어의 특성을 수용하여 SQL에서는 
사용할 수 없는 절차적 -프로그래밍 기능을 가지고 있어 SQL의 단점을 보완하였다.

PL/SQL문을 사용하는 이유
대용량 데이터를 연산해야 할 때, WAS등의 서버로 전송해서 처리하려면 네트워크에 부하가 많이 걸린다.
이때 프로시저나 함수를 사용하여 데이터를 연산하고 가공한 후에 , 최종 결과만 서버에 전송하면
부담을 많이 줄일 수 있다.
로직을 수정하기 위해 서버를 껐다 켜지 않아도 된다. 서버에서는 단순히 DB에 프로시저를 호출하여 사용하면 된다.
쿼리문을 직접 노출하지 않는 만큼, SQL injection의 위험성이 줄어든다.

PL/SQL문의 기본 구조
DECLARE(선언부) PL/SQL문에서 사용하는 모든 변수나 상수를 선언하는 부분

IS

BEGIN(실행부) 절차적으로 SQL문을 실행할 수 있도록 제어문, 반복문, 함수의 정의 등\
로직을 기술할 수 있는 부분
END;(실행문종료)

PL/SQL문의 종류

프로시저 : 리턴 값을 하나 이상 가질 수 있는 프로그램
함수 : 리턴 값을 반드시 반환해야 하는 프로그램
패키지 : 하나 이상의 프로시저, 함수, 변수등의 묶음
트리거 : 지정된 이벤트가 발생하면 자동으로 실행되는 PL/SQL 블록

IF문
1. IF조건 THEN 실행문;-
   END IF;

2 IF 조건 THEN 실행문;
  ELSE 실행문;
  END IF;

3. IF 조건 THEN 실행문;
  ELSIF 조건문 THEN 실행문;
  ELS 실행문;
  END IF;


반복문

1. FOR LOOP문

FOR i in 시작값 end 값 loop
	반복하고자 하는 명령
end loop

WHILE문

WHILE(조건)
LOOP
명령;
END LOOP;

프로시저(PROCEDURE)
PL/SQL의 대표적인 부 프로그램에 프로시저가 있다.
데이터베이스에 대한 일련의 작업을 정리한 절차를 
RDBMS에 저장한 것으로 영구 저장 모듈이라고도 합니다.
일련의 쿼리를 마치 하나의 함수처럼 실행하기 위한 쿼리의 집합입니다.
거의 함수와 비슷하다.

장점
하나의 요청으로 여러 SQL문을 실행시킬 수 있습니다.
네트워크 소요 시간을 줄여 성능을 개선할 수 있습니다.
기능변경이 편하다.
서버에서 실행되기 떄문에 속도가 빠르다.
리턴값이 있을수도 있고 없을수도 있다.
여러 개의 리턴값을 보낼 수도 있다.

단점
문자나 숫자 연산에 사용하면 오히려 C,JAVA보다 느린 성능을 볼 수 있다.
유지보수가 쉽지 않다.

함수
하나의 특별한 목적의 작업을 수행하기 위해 독립적으로 설계된 코드의 집합
-반환값이 무조건 있어야 한다.
- 쿼리문 내에서 사용하는것이 가능하다.
- 클라이언트(화면)에서 값을 건네받고 서버에서 필요한 값을 가져와서 클라이언트에서 작업을 하고 반환
- 프로시저보다는 속도가 느리다

CREATE OR REPLACE PROCEDURE 프로시져이름 (
        매개변수1 IN 데이터타입:= 값,
        매개변수2 IN 데이터타입%TYPE
)

IS
  함수 내에서 사용할 변수, 상수 등 선언 , 밑에서 반복되서 사용될 문장을 하나로 선언해서 사용하겠다.

BEGIN

    실행할 문장

END 프로시져 이름;

프로시저의 사용
CALL 프로시저명(값,값2)

프로시저와 DML 접목하기

JOBS 테이블에 INSERT를 해주는 프로시저 만들기

SEQUENCE
테이블에 값을 추가할 때 자동으로 순차적인 정수값이 들어가도록 설정해주는 객체

