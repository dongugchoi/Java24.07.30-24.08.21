if - else if
비교해야 할 조건이 여러개 있는 경우 사용하는 문법
if문안에 두 개 이상의 조건식과 논리연산자로 사용할 수 있지만 
코드를 간결하게 하고 가독성을 높이기 위한 방법으로 if -else if문을 구현한다.

if(조건식){

} else if(조건식2){
    조건식 2가 참일 때 실행할 명령
} else if(조건식3){
    조건식 3이 참일 때 실행할 명령
} else if(조건식4){
    조건식 4가 참일 때 실행할 명령
} else {
    어떠한 조건도 거짓일 때 실행할 명령
}

switch
-if문과 비슷하지만 조건식이 들어가야 하는것과 달리
-switch에 조건으로 들어갈 수 있는 연산자는 '=='밖에 없다.
-즉, 두 개의 피연산자 값이 같을때만 조건으로 활용할 수 있다.

switch(비교값){
case  조건값1:
	비교값과 조건값1이 일치할 때 실행할 명령
break;
case  조건값2:
	비교값과 조건값2이 일치할 때 실행할 명령
break;
case  조건값3:
	비교값과 조건값3이 일치할 때 실행할 명령
break;
default:
	비교값과 일치하는 조건값이 없을 때 실행할 명령
break; <-선택사항 디폴트값을만나면 어차피 스위치문을 빠져나가기때문에
}


반복문
- 특정수행문을 원하는만큼 반보갛여 실행하는 제어문

반복문의 종류
for, while

for문
- 주로 반복횟수가 정해져있을때 사용하는 문법

for(초기식;조건식;증감식;){
	반복하고싶은 명령
	명령은 여러개 일수 있다.
	ex)산술연산을 해라,대입해라,출력해라
}

초기식: 반복을 하기위한 시작값으로 변수를 하나 초기화 한다.
조건식: 반복을 하기위한 종료값으로 비교연산자를 사용한다.
증감식: 초기식의 변수의 값을 증감시켜주는 역할(증감연산자를 많이 사용)

for문의 중첩(다중 for문)
-for문 안에 다른 for문을 사용하는 경우를 말한다.
-for문을 중첩하여 사용하기 때문에 코드가 어려워 보일 수는 있으나, 반복문의 작동 원리와 같다.
for(초기식;조건식;증감식){ //행의 개수
	for(초기식;조건식;증감식){ //열의 개수
		반복할 명령
	}
}

while문
-for문은 정해진 횟수만큼 반복을 하는 문법
-while문은 반복횟수가 정해져 있지 않고, 조건식이 true일 경우 계속해서 반복하는 문법
-주의하지 않으면 무한루프에 빠질 수 있다.

기본형태
while(조건식){
    조건식이 참일 때 반복할 명령
}

while문은 for문처럼 시작값과 증감값을 가지고 있지 않다.




